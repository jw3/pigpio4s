package pigpio4s;

import java.nio.ByteBuffer;
import java.nio.IntBuffer;

import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;

import pigpio4s.rawWaveInfo_t.ByValue;

/**
 * JNA Wrapper for library <b>pigpio</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@SuppressWarnings("unused")
public interface PigpioLibrary
	extends Library {
	String JNA_LIBRARY_NAME = "pigpio";
	NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(PigpioLibrary.JNA_LIBRARY_NAME);
	PigpioLibrary INSTANCE = (PigpioLibrary)Native.loadLibrary(PigpioLibrary.JNA_LIBRARY_NAME, PigpioLibrary.class);
	int PI_CMD_PARSE = (int)48;
	int PI_BAD_HPWM_DUTY = (int)-97;
	int PIGPIO_VERSION = (int)40;
	int PI_TOO_MANY_OOL = (int)-68;
	int PI_SCRIPT_INITING = (int)0;
	int PI_CMD_JMP = (int)813;
	int PI_CMD_TAG = (int)817;
	int PI_BAD_PULSELEN = (int)-46;
	int PI_I2C_WRITE = (int)7;
	int PI_MAX_WAVES = (int)250;
	int PI_WAVE_MAX_BAUD = (int)1000000;
	int PI_INIT_FAILED = (int)-1;
	int PI_CMD_WVTXR = (int)52;
	int PI_CMD_RR = (int)832;
	int PI_BAD_DUTYRANGE = (int)-21;
	int PI_BAD_SECO_CHANNEL = (int)-30;
	int PI_MAX_I2C_DEVICE_COUNT = (int)(1 << 16);
	int PI_BAD_SCRIPT_ID = (int)-48;
	int PI_CMD_JNZ = (int)814;
	int PI_CMD_RL = (int)830;
	int PI_PUD_OFF = (int)0;
	int PI_SET = (int)1;
	int PI_CFG_ALERT_FREQ = (int)4;
	int PI_BAD_USER_GPIO = (int)-2;
	int PI_NOT_SERVO_GPIO = (int)-93;
	int PI_CHAIN_LOOP_CNT = (int)-113;
	int PI_CLOCK_PCM = (int)1;
	int PI_I2C_READ = (int)6;
	int PI_DEFAULT_CFG_INTERNALS = (int)0;
	int PI_CMD_SERVO = (int)8;
	int PI_TIME_ABSOLUTE = (int)1;
	int PI_CMD_DCR = (int)806;
	int PI_DEFAULT_DMA_SECONDARY_CHANNEL = (int)5;
	int PI_BAD_CLK_PERIPH = (int)-17;
	int PI_WAVE_MAX_CHARS = (int)(4 * 300);
	int PI_CMD_SCRIPT = (int)800;
	int PI_BAD_HPWM_FREQ = (int)-96;
	int PI_CMD_WVBSY = (int)32;
	int PI_CMD_SERWB = (int)79;
	int PI_CMD_INR = (int)810;
	int PI_MAX_WAVE_DELAY = (int)65535;
	int PI_WAVE_COUNT_PAGES = (int)10;
	int PI_MAX_MICS_DELAY = (int)1000000;
	int PI_BAD_CHAIN_LOOP = (int)-114;
	int PI_SPI_MIN_BAUD = (int)1;
	int PI_CMD_GDC = (int)83;
	int PI_BAD_WDOG_TIMEOUT = (int)-15;
	int PI_CMD_WVSC = (int)36;
	int PI_CMD_OR = (int)824;
	int PI_CMD_WDOG = (int)9;
	int PI_CMD_WVCRE = (int)49;
	int PI_NOT_SERIAL_GPIO = (int)-38;
	int PI_CMD_MODEG = (int)1;
	int PI_SOCK_WRIT_FAILED = (int)-60;
	String PI_INPFIFO = (String)"/dev/pigpio";
	int PI_CMD_MODES = (int)0;
	int PI_BAD_SPI_COUNT = (int)-84;
	int PI_BAD_POINTER = (int)-90;
	int PI_I2C_FLAGS = (int)5;
	int PI_MIN_DUTYCYCLE_RANGE = (int)25;
	int PI_SPI_XFER_FAILED = (int)-89;
	int PI_CMD_PWM = (int)5;
	int PI_DEPRECATED = (int)-120;
	int PI_MAX_DMA_CHANNEL = (int)14;
	int PI_CMD_NO = (int)18;
	int PI_CMD_NP = (int)20;
	int PI_CMD_NC = (int)21;
	int PI_BAD_I2C_WLEN = (int)-109;
	int PI_BAD_STOPBITS = (int)-102;
	int PI_BAD_WAVE_BAUD = (int)-35;
	int PI_BB_SER_MAX_BAUD = (int)250000;
	int PI_CMD_WVNEW = (int)53;
	int PI_TOO_MANY_CHARS = (int)-37;
	int PI_MEM_ALLOC_MAILBOX = (int)2;
	int PI_TOO_MANY_SEGS = (int)-105;
	int PI_CMD_SERRB = (int)78;
	int PI_SER_READ_NO_DATA = (int)-87;
	int PI_BAD_DATABITS = (int)-101;
	int PI_MAX_SCRIPT_TAGS = (int)50;
	int PI_MAX_WAVE_CYCLES = (int)65535;
	int PI_DEFAULT_DMA_CHANNEL = (int)14;
	int PI_MIN_TIMER = (int)0;
	int PI_MIN_SERVO_PULSEWIDTH = (int)500;
	int PI_HPWM_ILLEGAL = (int)-100;
	int PI_BAD_EDGE = (int)-122;
	String PI_DEFAULT_SOCKET_ADDR_STR = (String)"127.0.0.1";
	int PI_BAD_HCLK_PASS = (int)-99;
	int PI_MAX_ACTIVE = (int)1000000;
	int PI_DEFAULT_SOCKET_PORT = (int)8888;
	int PI_NO_HANDLE = (int)-24;
	int PI_DEFAULT_IF_FLAGS = (int)0;
	int PI_BAD_MODE = (int)-4;
	int PI_SER_SLOTS = (int)8;
	int PI_CMD_ADD = (int)800;
	int PI_CMD_RET = (int)829;
	int PI_BAD_SER_SPEED = (int)-80;
	int PI_DEFAULT_MEM_ALLOC_MODE = (int)0;
	int PI_BAD_HCLK_FREQ = (int)-98;
	int PI_CMD_DIV = (int)808;
	int PI_DUP_TAG = (int)-53;
	int PI_BAD_PULSEWIDTH = (int)-7;
	int PI_DISABLE_FIFO_IF = (int)1;
	int PI_HW_PWM_MIN_FREQ = (int)1;
	int PI_SCRIPT_HALTED = (int)1;
	int PI_NOT_PWM_GPIO = (int)-92;
	int PI_BAD_SER_INVERT = (int)-121;
	int PI_BAD_CLK_SOURCE = (int)-18;
	int PI_TIMER_FAILED = (int)-14;
	int PI_CMD_GPW = (int)84;
	int PI_MAX_MILS_DELAY = (int)60000;
	int PI_CMD_TICK = (int)16;
	int PI_TOO_MANY_PULSES = (int)-36;
	int PI_NOT_PERMITTED = (int)-41;
	int PI_CMD_READ = (int)3;
	int PI_CMD_WRITE = (int)4;
	int PI_CMD_WVTX = (int)51;
	int PI_BAD_SPI_SPEED = (int)-78;
	int PI_WAVE_BLOCKS = (int)4;
	int PI_MIN_SOCKET_PORT = (int)1024;
	String PI_I2C_COMBINED = (String)"/sys/module/i2c_bcm2708/parameters/combined";
	int RISING_EDGE = (int)0;
	int PI_BAD_SPI_CHANNEL = (int)-76;
	int PI_CMD_X = (int)839;
	int PI_I2C_WRITE_FAILED = (int)-82;
	int PI_MAX_STEADY = (int)300000;
	int PI_BAD_PARAM = (int)-81;
	int PI_HW_PWM_RANGE = (int)1000000;
	int PI_BAD_MICROS = (int)-13;
	int PI_BAD_I2C_BAUD = (int)-112;
	int PI_MAX_DUTYCYCLE_RANGE = (int)40000;
	int PI_CMD_WAIT = (int)838;
	int PI_ON = (int)1;
	int PI_NOT_HALTED = (int)-62;
	int PI_CMD_WVSM = (int)34;
	int PI_CMD_WVSP = (int)35;
	int PI_CMD_I2CWW = (int)64;
	int PI_NTFY_FLAGS_WDOG = (int)(1 << 5);
	int PI_MAX_SERVO_PULSEWIDTH = (int)2500;
	int PI_CFG_ILLEGAL_VAL = (int)(1 << 10);
	int PI_CMD_I2CWS = (int)60;
	int PI_NO_ALERT_FUNC = (int)-16;
	int PI_CMD_I2CWQ = (int)58;
	int PI_BAD_WAVE_ID = (int)-66;
	int PI_CMD_I2CWK = (int)66;
	int PI_CMD_I2CWI = (int)68;
	int PI_BAD_BUF_MILLIS = (int)-20;
	int PI_CMD_I2CWD = (int)57;
	int PI_CMD_I2CWB = (int)62;
	int PI_MIN_WDOG_TIMEOUT = (int)0;
	int PI_CMD_SLRO = (int)42;
	int PI_CMD_CALL = (int)802;
	int PI_MAX_SPI_DEVICE_COUNT = (int)(1 << 16);
	int PI_CMD_XA = (int)840;
	int PI_CLEAR = (int)0;
	int PI_CUSTOM_ERR_999 = (int)-3999;
	int PI_I2C_ADDR = (int)4;
	String PI_ENVPORT = (String)"PIGPIO_PORT";
	int PI_NOT_INITIALISED = (int)-31;
	int PI_CMD_PIGPV = (int)26;
	int PI_CMD_STAB = (int)835;
	int PI_NUM_AUX_SPI_CHANNEL = (int)3;
	int PI_SER_WRITE_FAILED = (int)-85;
	int PI_BAD_PATHNAME = (int)-23;
	int PI_SCRIPT_RUNNING = (int)2;
	int PI_DEFAULT_DUTYCYCLE_RANGE = (int)255;
	int PI_CFG_DBG_LEVEL = (int)0;
	int PI_CMD_BC2 = (int)13;
	int PI_CMD_BC1 = (int)12;
	int PI_CMD_SLRI = (int)94;
	int PI_MAX_I2C_ADDR = (int)0x7F;
	int PI_BAD_CLK_MICROS = (int)-19;
	int PI_CMD_SLRC = (int)44;
	int PI_BAD_WVSP_COMMND = (int)-45;
	int PI_MAX_SCRIPT_PARAMS = (int)10;
	int PI_TOO_MANY_PARAM = (int)-61;
	int PI_I2C_START = (int)2;
	int PI_HIGH = (int)1;
	int PI_CMD_XOR = (int)841;
	int PI_CMD_CF2 = (int)88;
	int PI_CMD_CF1 = (int)87;
	int PI_DEFAULT_BUFFER_MILLIS = (int)120;
	int PI_CFG_STATS = (int)(1 << 9);
	int PI_CMD_PROCR = (int)40;
	int PI_CMD_PROCS = (int)41;
	int PI_BAD_SMBUS_CMD = (int)-107;
	int PI_MIN_GPIO = (int)0;
	int PI_DISABLE_SOCK_IF = (int)2;
	int PI_MIN_WAVE_HALFSTOPBITS = (int)2;
	int PI_CMD_HWVER = (int)17;
	int PI_BB_I2C_MAX_BAUD = (int)500000;
	int PI_CMD_CGI = (int)95;
	int PI_BB_SER_INVERT = (int)1;
	int PI_CMD_PROCD = (int)39;
	int PI_BAD_I2C_SEG = (int)-106;
	int PI_I2C_M_WR = (int)0x0000;
	int PI_MAX_SIGNUM = (int)63;
	int PI_CMD_INRA = (int)811;
	int PI_CMD_PROCP = (int)45;
	int PI_I2C_STOP = (int)3;
	int PI_I2C_M_RD = (int)0x0001;
	int PI_GPIO_IN_USE = (int)-50;
	int WAVE_FLAG_READ = (int)1;
	int PI_CMD_SERDA = (int)82;
	int PI_BAD_PUD = (int)-6;
	int PI_NOTIFY_SLOTS = (int)32;
	int PI_CMD_I2CRW = (int)63;
	int PI_BAD_PARAM_NUM = (int)-52;
	int WAVE_FLAG_TICK = (int)2;
	int PI_CMD_I2CRS = (int)59;
	int PI_SCRIPT_FAILED = (int)4;
	int PI_CMD_I2CRK = (int)65;
	int PI_CMD_DCRA = (int)807;
	int PI_CMD_I2CRI = (int)67;
	int PI_BAD_IF_FLAGS = (int)-26;
	int PI_CMD_I2CRD = (int)56;
	int PI_CMD_I2CRB = (int)61;
	int PI_NOT_HPWM_GPIO = (int)-95;
	int PI_BAD_SER_OFFSET = (int)-49;
	int PI_SER_OPEN_FAILED = (int)-72;
	int PI_MAX_WDOG_TIMEOUT = (int)60000;
	int PI_CFG_RT_PRIORITY = (int)(1 << 8);
	int PI_BAD_SCRIPT_CMD = (int)-55;
	int PI_BAD_TIMETYPE = (int)-11;
	int PI_MAX_PRIMARY_CHANNEL = (int)14;
	int FALLING_EDGE = (int)1;
	int PI_MIN_WAVE_DATABITS = (int)1;
	int PI_CMD_NOIB = (int)99;
	int PI_I2C_READ_FAILED = (int)-83;
	int PI_DEFAULT_CLK_PERIPHERAL = (int)1;
	int PI_BAD_MILS_DELAY = (int)-65;
	int PI_CMD_LDA = (int)819;
	int PI_WAVE_MIN_BAUD = (int)50;
	int PI_I2C_M_IGNORE_NAK = (int)0x1000;
	int PI_MIN_MS = (int)10;
	int PI_CMD_PUSHA = (int)828;
	int PI_CMD_WVDEL = (int)50;
	int PI_CMD_I2CPK = (int)70;
	int PI_BAD_HANDLE = (int)-25;
	int PI_BAD_TIMER = (int)-9;
	int PI_BAD_I2C_ADDR = (int)-75;
	int PI_NOT_I2C_GPIO = (int)-108;
	int PI_SOME_PERMITTED = (int)-42;
	int PI_PUD_UP = (int)2;
	int PI_CMD_AND = (int)801;
	int PI_CMD_I2CPC = (int)69;
	int PI_INITIALISED = (int)-32;
	int PI_CMD_BR2 = (int)11;
	int PI_I2C_M_TEN = (int)0x0010;
	int PI_CMD_BR1 = (int)10;
	int PI_CMD_CMDR = (int)803;
	int PI_BUF_MILLIS_MAX = (int)10000;
	int PI_BAD_SIGNUM = (int)-22;
	int PI_NO_WAVEFORM_ID = (int)-70;
	int PI_CMD_CMDW = (int)804;
	int PI_BAD_VAR_NUM = (int)-56;
	int PI_NO_MEMORY = (int)-58;
	int PI_I2C_ESC = (int)1;
	int PI_CMD_CSI = (int)96;
	int PI_WAVE_MODE_REPEAT = (int)1;
	int PI_NUM_I2C_BUS = (int)2;
	int PI_SOCK_READ_FAILED = (int)-59;
	int PI_CMD_PROC = (int)38;
	int PI_BAD_PRIM_CHANNEL = (int)-27;
	int PI_SER_READ_FAILED = (int)-86;
	int PI_DEFAULT_CLK_MICROS = (int)5;
	long PI_DEFAULT_UPDATE_MASK_COMPUTE = (long)0x00FFFFFFFFFFFFL;
	int PI_MEM_ALLOC_AUTO = (int)0;
	long PI_DEFAULT_UPDATE_MASK_R0 = (long)0xFFFFFFFFL;
	int PI_TOO_MANY_CBS = (int)-67;
	int PI_BAD_SECONDS = (int)-12;
	int PI_TIME_RELATIVE = (int)0;
	int PI_SERVO_OFF = (int)0;
	int PI_MEM_ALLOC_PAGEMAP = (int)1;
	int PI_CMD_I2CO = (int)54;
	int PI_BAD_LEVEL = (int)-5;
	int PI_CMD_PFS = (int)7;
	int PI_CMD_I2CZ = (int)92;
	int PI_MAX_MS = (int)60000;
	int PI_CMD_CMP = (int)805;
	int PI_UNKNOWN_COMMAND = (int)-88;
	int PI_CMD_HELP = (int)25;
	int PI_CMD_PFG = (int)23;
	int PI_CMD_WVHLT = (int)33;
	int PI_CMD_WVAS = (int)29;
	int PI_CMD_SLR = (int)43;
	int PI_CMD_WVAG = (int)28;
	int PI_CHAIN_NESTING = (int)-118;
	int PI_OFF = (int)0;
	int PI_DEFAULT_DMA_PRIMARY_CHANNEL = (int)14;
	int PI_BAD_SER_DEVICE = (int)-79;
	int PI_I2C_M_REV_DIR_ADDR = (int)0x2000;
	int PI_MAX_SECONDARY_CHANNEL = (int)6;
	int PI_BAD_SERIAL_BUF = (int)-40;
	int PI_CMD_PUSH = (int)827;
	int PI_HW_CLK_MAX_FREQ = (int)250000000;
	int PI_MAX_SCRIPT_VARS = (int)150;
	int PI_CMD_RLA = (int)831;
	int PI_I2C_END = (int)0;
	int PI_MAX_BUSY_DELAY = (int)100;
	int PI_BAD_I2C_CMD = (int)-111;
	int PI_BAD_MICS_DELAY = (int)-64;
	int PI_CMD_I2CC = (int)55;
	int PI_BAD_GPIO = (int)-3;
	int PI_BAD_I2C_RLEN = (int)-110;
	int PI_BAD_FIFO_COMMAND = (int)-29;
	int PI_CLOCK_PWM = (int)0;
	String PI_LOCKFILE = (String)"/var/run/pigpio.pid";
	int PI_BAD_MALLOC_MODE = (int)-104;
	int PI_MAX_SOCKET_PORT = (int)32000;
	int PI_I2C_M_RECV_LEN = (int)0x0400;
	int PI_BAD_SCRIPT = (int)-47;
	int PI_HW_CLK_MIN_FREQ = (int)4689;
	long PI_DEFAULT_UPDATE_MASK_R3 = (long)0x0080480FFFFFFCL;
	String PI_ERRFIFO = (String)"/dev/pigerr";
	int PI_WAVE_MODE_ONE_SHOT = (int)0;
	int PI_BAD_TAG = (int)-63;
	int PI_DEFAULT_UPDATE_MASK_R1 = (int)0x03E7CF93;
	int PI_DEFAULT_UPDATE_MASK_R2 = (int)0xFBC7CF9C;
	String PI_ENVADDR = (String)"PIGPIO_ADDR";
	int PI_CMD_MICS = (int)46;
	int PI_NO_AUX_SPI = (int)-91;
	int PI_BB_SER_MIN_BAUD = (int)50;
	int PI_CUSTOM_ERR_0 = (int)-3000;
	int PI_SCRIPT_WAITING = (int)3;
	int PI_PIGIF_ERR_0 = (int)-2000;
	int PI_BB_SER_NORMAL = (int)0;
	int PI_CMD_PRG = (int)22;
	int PI_I2C_M_NO_RD_ACK = (int)0x0800;
	int PI_BAD_SOCKET_PORT = (int)-28;
	int PI_MAX_SCRIPTS = (int)32;
	int PI_BAD_MS = (int)-10;
	int PI_CMD_JZ = (int)816;
	int PI_CMD_PRRG = (int)24;
	int PI_NTFY_FLAGS_ALIVE = (int)(1 << 6);
	int PI_MAX_USER_GPIO = (int)31;
	int PI_CMD_JP = (int)815;
	int PI_MIN_SIGNUM = (int)0;
	int PI_CMD_PRS = (int)6;
	int PI_CMD_JM = (int)812;
	int PI_HW_PWM_MAX_FREQ = (int)125000000;
	int PI_CMD_MLT = (int)821;
	int PI_CMD_LDAB = (int)820;
	int EITHER_EDGE = (int)2;
	int PI_CMD_NB = (int)19;
	int PI_I2C_OPEN_FAILED = (int)-71;
	int PI_SPI_OPEN_FAILED = (int)-73;
	int PI_CMD_WVCLR = (int)27;
	int PI_CMD_NOP = (int)823;
	int PI_BAD_CHAIN_DELAY = (int)-117;
	int PI_LOW = (int)0;
	int PI_CMD_SYS = (int)837;
	int PI_CMD_MOD = (int)822;
	int PI_CMD_PUD = (int)2;
	int PI_WAVE_MAX_PULSES = (int)(4 * 3000);
	int PI_NUM_STD_SPI_CHANNEL = (int)2;
	int PI_MAX_TIMER = (int)9;
	int PI_NO_SCRIPT_ROOM = (int)-57;
	String PI_OUTFIFO = (String)"/dev/pigout";
	String PI_DEFAULT_SOCKET_PORT_STR = (String)"8888";
	int PI_MIN_DMA_CHANNEL = (int)0;
	int PI_BUF_MILLIS_MIN = (int)100;
	int PI_CMD_LD = (int)818;
	int PI_TIMEOUT = (int)2;
	int PI_EMPTY_WAVEFORM = (int)-69;
	int PI_BAD_WVSC_COMMND = (int)-43;
	int PI_CHAIN_COUNTER = (int)-115;
	int PI_BAD_ISR_INIT = (int)-123;
	int PI_CMD_BS2 = (int)15;
	int PI_CMD_RRA = (int)833;
	int PI_CMD_BS1 = (int)14;
	int PI_PUD_DOWN = (int)1;
	int PI_SPI_MAX_BAUD = (int)500000000;
	int PI_BAD_CHANNEL = (int)-27;
	int PI_ALT4 = (int)3;
	int PI_ALT3 = (int)7;
	int PI_CMD_STA = (int)834;
	int PI_ALT5 = (int)2;
	int PI_ALT0 = (int)4;
	int PI_ALT2 = (int)6;
	int PI_ALT1 = (int)5;
	int PI_BAD_DUTY_RANGE = (int)-21;
	int PI_MAX_WAVE_HALFSTOPBITS = (int)8;
	int PI_BAD_DUTYCYCLE = (int)-8;
	int PI_BAD_I2C_BUS = (int)-74;
	int PI_CMD_SPIO = (int)71;
	int PI_I2C_SLOTS = (int)32;
	int PI_MAX_WAVE_DATABITS = (int)32;
	int PI_MSG_TOOBIG = (int)-103;
	int PI_CMD_FN = (int)98;
	int PI_BAD_SERIAL_STRUC = (int)-39;
	int PI_TOO_MANY_TAGS = (int)-54;
	int PI_CMD_SPIC = (int)72;
	int PI_OUTPUT = (int)1;
	int PI_CMD_SUB = (int)836;
	int PI_INPUT = (int)0;
	int PI_CMD_HALT = (int)809;
	int PI_I2C_COMBINED_OFF = (int)3;
	int PI_BAD_WAVE_MODE = (int)-33;
	int PI_I2C_M_NOSTART = (int)0x4000;
	int PI_CMD_FG = (int)97;
	int PI_I2C_COMBINED_ON = (int)2;
	int PI_CMD_SPIR = (int)73;
	int PI_BAD_FILTER = (int)-125;
	int PI_CMD_SPIW = (int)74;
	int PI_CMD_SPIX = (int)75;
	int PI_NOT_HCLK_GPIO = (int)-94;
	int PI_CMD_SERW = (int)81;
	int PI_CMD_WVCHA = (int)93;
	int PI_BAD_FLAGS = (int)-77;
	int PI_CMD_MILS = (int)47;
	int PI_I2C_RDRW_IOCTL_MAX_MSGS = (int)42;
	int PI_CMD_TRIG = (int)37;
	int PI_BAD_CHAIN_CMD = (int)-116;
	int PI_CMD_POP = (int)825;
	int PI_BAD_CFG_INTERNAL = (int)-34;
	int PI_BB_I2C_MIN_BAUD = (int)50;
	int PI_CMD_WVGOR = (int)31;
	int PI_CMD_POPA = (int)826;
	int PI_SPI_SLOTS = (int)16;
	int PI_PIGIF_ERR_99 = (int)-2099;
	int PI_CMD_BI2CC = (int)89;
	int PI_CMD_SERC = (int)77;
	int PI_CMD_HP = (int)86;
	int PI_CMD_BI2CO = (int)90;
	int PI_WAVE_MAX_MICROS = (int)(30 * 60 * 1000000);
	int PI_CMD_BI2CZ = (int)91;
	int PI_CHAIN_TOO_BIG = (int)-119;
	int PI_MAX_GPIO = (int)53;
	int PI_CMD_SERR = (int)80;
	int PI_CMD_WVGO = (int)30;
	int PI_CMD_HC = (int)85;
	int PI_CMD_SERO = (int)76;
	int PI_BAD_WVSM_COMMND = (int)-44;
	int PI_BAD_SERIAL_COUNT = (int)-51;
	int PI_BAD_FOREVER = (int)-124;


	interface gpioAlertFunc_t
		extends Callback {
		void apply(int gpio, int level, int tick);
	}


	interface gpioAlertFuncEx_t
		extends Callback {
		void apply(int gpio, int level, int tick, Pointer userdata);
	}


	interface gpioISRFunc_t
		extends Callback {
		void apply(int gpio, int level, int tick);
	}


	interface gpioISRFuncEx_t
		extends Callback {
		void apply(int gpio, int level, int tick, Pointer userdata);
	}


	interface gpioTimerFunc_t
		extends Callback {
		void apply();
	}


	interface gpioTimerFuncEx_t
		extends Callback {
		void apply(Pointer userdata);
	}


	interface gpioSignalFunc_t
		extends Callback {
		void apply(int signum);
	}


	interface gpioSignalFuncEx_t
		extends Callback {
		void apply(int signum, Pointer userdata);
	}


	interface gpioGetSamplesFunc_t
		extends Callback {
		void apply(gpioSample_t samples, int numSamples);
	}


	interface gpioGetSamplesFuncEx_t
		extends Callback {
		void apply(gpioSample_t samples, int numSamples, Pointer userdata);
	}


	int gpioInitialise();


	void gpioTerminate();


	int gpioSetMode(int gpio, int mode);


	int gpioGetMode(int gpio);


	int gpioSetPullUpDown(int gpio, int pud);


	int gpioRead(int gpio);


	int gpioWrite(int gpio, int level);


	int gpioPWM(int user_gpio, int dutycycle);


	int gpioGetPWMdutycycle(int user_gpio);


	int gpioSetPWMrange(int user_gpio, int range);


	int gpioGetPWMrange(int user_gpio);


	int gpioGetPWMrealRange(int user_gpio);


	int gpioSetPWMfrequency(int user_gpio, int frequency);


	int gpioGetPWMfrequency(int user_gpio);


	int gpioServo(int user_gpio, int pulsewidth);


	int gpioGetServoPulsewidth(int user_gpio);


	int gpioSetAlertFunc(int user_gpio, PigpioLibrary.gpioAlertFunc_t f);


	int gpioSetAlertFuncEx(int user_gpio, PigpioLibrary.gpioAlertFuncEx_t f, Pointer userdata);


	int gpioSetISRFunc(int user_gpio, int edge, int timeout, PigpioLibrary.gpioISRFunc_t f);


	int gpioSetISRFuncEx(int user_gpio, int edge, int timeout, PigpioLibrary.gpioISRFuncEx_t f, Pointer userdata);


	int gpioNotifyOpen();


	int gpioNotifyBegin(int handle, int bits);


	int gpioNotifyPause(int handle);


	int gpioNotifyClose(int handle);


	int gpioWaveClear();


	int gpioWaveAddNew();


	int gpioWaveAddGeneric(int numPulses, gpioPulse_t pulses);


	@Deprecated
	int gpioWaveAddSerial(int user_gpio, int baud, int data_bits, int stop_bits, int offset, int numBytes, Pointer str);


	int gpioWaveAddSerial(int user_gpio, int baud, int data_bits, int stop_bits, int offset, int numBytes, ByteBuffer str);


	int gpioWaveCreate();


	int gpioWaveDelete(int wave_id);


	int gpioWaveTxSend(int wave_id, int wave_mode);


	@Deprecated
	int gpioWaveChain(Pointer buf, int bufSize);


	int gpioWaveChain(ByteBuffer buf, int bufSize);


	int gpioWaveTxBusy();


	int gpioWaveTxStop();


	int gpioWaveGetMicros();


	int gpioWaveGetHighMicros();


	int gpioWaveGetMaxMicros();


	int gpioWaveGetPulses();


	int gpioWaveGetHighPulses();


	int gpioWaveGetMaxPulses();


	int gpioWaveGetCbs();


	int gpioWaveGetHighCbs();


	int gpioWaveGetMaxCbs();


	int gpioSerialReadOpen(int user_gpio, int baud, int data_bits);


	int gpioSerialReadInvert(int user_gpio, int invert);


	int gpioSerialRead(int user_gpio, Pointer buf, NativeSize bufSize);


	int gpioSerialReadClose(int user_gpio);


	int i2cOpen(int i2cBus, int i2cAddr, int i2cFlags);


	int i2cClose(int handle);


	int i2cWriteQuick(int handle, int bit);


	int i2cWriteByte(int handle, int bVal);


	int i2cReadByte(int handle);


	int i2cWriteByteData(int handle, int i2cReg, int bVal);


	int i2cWriteWordData(int handle, int i2cReg, int wVal);


	int i2cReadByteData(int handle, int i2cReg);


	int i2cReadWordData(int handle, int i2cReg);


	int i2cProcessCall(int handle, int i2cReg, int wVal);


	@Deprecated
	int i2cWriteBlockData(int handle, int i2cReg, Pointer buf, int count);


	int i2cWriteBlockData(int handle, int i2cReg, ByteBuffer buf, int count);


	@Deprecated
	int i2cReadBlockData(int handle, int i2cReg, Pointer buf);


	int i2cReadBlockData(int handle, int i2cReg, ByteBuffer buf);


	@Deprecated
	int i2cBlockProcessCall(int handle, int i2cReg, Pointer buf, int count);


	int i2cBlockProcessCall(int handle, int i2cReg, ByteBuffer buf, int count);


	@Deprecated
	int i2cReadI2CBlockData(int handle, int i2cReg, Pointer buf, int count);


	int i2cReadI2CBlockData(int handle, int i2cReg, ByteBuffer buf, int count);


	@Deprecated
	int i2cWriteI2CBlockData(int handle, int i2cReg, Pointer buf, int count);


	int i2cWriteI2CBlockData(int handle, int i2cReg, ByteBuffer buf, int count);


	@Deprecated
	int i2cReadDevice(int handle, Pointer buf, int count);


	int i2cReadDevice(int handle, ByteBuffer buf, int count);


	@Deprecated
	int i2cWriteDevice(int handle, Pointer buf, int count);


	int i2cWriteDevice(int handle, ByteBuffer buf, int count);


	void i2cSwitchCombined(int setting);


	int i2cSegments(int handle, pi_i2c_msg_t segs, int numSegs);


	@Deprecated
	int i2cZip(int handle, Pointer inBuf, int inLen, Pointer outBuf, int outLen);


	int i2cZip(int handle, ByteBuffer inBuf, int inLen, ByteBuffer outBuf, int outLen);


	int bbI2COpen(int SDA, int SCL, int baud);


	int bbI2CClose(int SDA);


	@Deprecated
	int bbI2CZip(int SDA, Pointer inBuf, int inLen, Pointer outBuf, int outLen);


	int bbI2CZip(int SDA, ByteBuffer inBuf, int inLen, ByteBuffer outBuf, int outLen);


	int spiOpen(int spiChan, int baud, int spiFlags);


	int spiClose(int handle);


	@Deprecated
	int spiRead(int handle, Pointer buf, int count);


	int spiRead(int handle, ByteBuffer buf, int count);


	@Deprecated
	int spiWrite(int handle, Pointer buf, int count);


	int spiWrite(int handle, ByteBuffer buf, int count);


	@Deprecated
	int spiXfer(int handle, Pointer txBuf, Pointer rxBuf, int count);


	int spiXfer(int handle, ByteBuffer txBuf, ByteBuffer rxBuf, int count);


	@Deprecated
	int serOpen(Pointer sertty, int baud, int serFlags);


	int serOpen(ByteBuffer sertty, int baud, int serFlags);


	int serClose(int handle);


	int serWriteByte(int handle, int bVal);


	int serReadByte(int handle);


	@Deprecated
	int serWrite(int handle, Pointer buf, int count);


	int serWrite(int handle, ByteBuffer buf, int count);


	@Deprecated
	int serRead(int handle, Pointer buf, int count);


	int serRead(int handle, ByteBuffer buf, int count);


	int serDataAvailable(int handle);


	int gpioTrigger(int user_gpio, int pulseLen, int level);


	int gpioSetWatchdog(int user_gpio, int timeout);


	int gpioNoiseFilter(int user_gpio, int steady, int active);


	int gpioGlitchFilter(int user_gpio, int steady);


	int gpioSetGetSamplesFunc(PigpioLibrary.gpioGetSamplesFunc_t f, int bits);


	int gpioSetGetSamplesFuncEx(PigpioLibrary.gpioGetSamplesFuncEx_t f, int bits, Pointer userdata);


	int gpioSetTimerFunc(int timer, int millis, PigpioLibrary.gpioTimerFunc_t f);


	int gpioSetTimerFuncEx(int timer, int millis, PigpioLibrary.gpioTimerFuncEx_t f, Pointer userdata);


	PigpioLibrary.pthread_t gpioStartThread(PigpioLibrary.gpioThreadFunc_t f, Pointer userdata);


	void gpioStopThread(PigpioLibrary.pthread_t pth);


	@Deprecated
	int gpioStoreScript(Pointer script);


	int gpioStoreScript(ByteBuffer script);


	@Deprecated
	int gpioRunScript(int script_id, int numPar, IntByReference param);


	int gpioRunScript(int script_id, int numPar, IntBuffer param);


	@Deprecated
	int gpioScriptStatus(int script_id, IntByReference param);


	int gpioScriptStatus(int script_id, IntBuffer param);


	int gpioStopScript(int script_id);


	int gpioDeleteScript(int script_id);


	int gpioSetSignalFunc(int signum, PigpioLibrary.gpioSignalFunc_t f);


	int gpioSetSignalFuncEx(int signum, PigpioLibrary.gpioSignalFuncEx_t f, Pointer userdata);


	int gpioReadBits031();


	int gpioReadBits3253();


	int gpioWriteBits031Clear(int bits);


	int gpioWriteBits3253Clear(int bits);


	int gpioWriteBits031Set(int bits);


	int gpioWriteBits3253Set(int bits);


	int gpioHardwareClock(int gpio, int clkfreq);


	int gpioHardwarePWM(int gpio, int PWMfreq, int PWMduty);


	@Deprecated
	int gpioTime(int timetype, IntByReference seconds, IntByReference micros);


	int gpioTime(int timetype, IntBuffer seconds, IntBuffer micros);


	int gpioSleep(int timetype, int seconds, int micros);


	int gpioDelay(int micros);


	int gpioTick();


	int gpioHardwareRevision();


	int gpioVersion();


	int gpioCfgBufferSize(int cfgMillis);


	int gpioCfgClock(int cfgMicros, int cfgPeripheral, int cfgSource);


	int gpioCfgDMAchannel(int DMAchannel);


	int gpioCfgDMAchannels(int primaryChannel, int secondaryChannel);


	int gpioCfgPermissions(long updateMask);


	int gpioCfgSocketPort(int port);


	int gpioCfgInterfaces(int ifFlags);


	int gpioCfgMemAlloc(int memAllocMode);


	int gpioCfgInternals(int cfgWhat, int cfgVal);


	int gpioCfgGetInternals();


	int gpioCfgSetInternals(int cfgVal);


	@Deprecated
	int gpioCustom1(int arg1, int arg2, Pointer argx, int argc);


	int gpioCustom1(int arg1, int arg2, ByteBuffer argx, int argc);


	@Deprecated
	int gpioCustom2(int arg1, Pointer argx, int argc, Pointer retBuf, int retMax);


	int gpioCustom2(int arg1, ByteBuffer argx, int argc, ByteBuffer retBuf, int retMax);


	@Deprecated
	int rawWaveAddSPI(rawSPI_t spi, int offset, int spiSS, Pointer buf, int spiTxBits, int spiBitFirst, int spiBitLast, int spiBits);


	int rawWaveAddSPI(rawSPI_t spi, int offset, int spiSS, ByteBuffer buf, int spiTxBits, int spiBitFirst, int spiBitLast, int spiBits);


	int rawWaveAddGeneric(int numPulses, rawWave_t pulses);


	int rawWaveCB();


	rawCbs_t rawWaveCBAdr(int cbNum);


	int rawWaveGetOut(int pos);


	void rawWaveSetOut(int pos, int lVal);


	int rawWaveGetIn(int pos);


	void rawWaveSetIn(int pos, int lVal);


	ByValue rawWaveInfo(int wave_id);


	@Deprecated
	int getBitInBytes(int bitPos, Pointer buf, int numBits);


	int getBitInBytes(int bitPos, ByteBuffer buf, int numBits);


	@Deprecated
	void putBitInBytes(int bitPos, Pointer buf, int bit);


	void putBitInBytes(int bitPos, ByteBuffer buf, int bit);


	double timeTime();


	void timeSleep(double seconds);


	void rawDumpWave();


	void rawDumpScript(int script_id);


	/** Pointer to unknown (opaque) type */
	class gpioThreadFunc_t
		extends PointerType {
		gpioThreadFunc_t(Pointer address) {
			super(address);
		}


		gpioThreadFunc_t() {
			super();
		}
	}


	/** Pointer to unknown (opaque) type */
	class pthread_t
		extends PointerType {
		pthread_t(Pointer address) {
			super(address);
		}


		pthread_t() {
			super();
		}
	}
}
