package rxgpio;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class rawCbs_t extends Structure {
	public int info;
	public int src;
	public int dst;
	public int length;
	public int stride;
	public int next;
	public int[] pad = new int[2];
	public rawCbs_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("info", "src", "dst", "length", "stride", "next", "pad");
	}
	public rawCbs_t(int info, int src, int dst, int length, int stride, int next, int pad[]) {
		super();
		this.info = info;
		this.src = src;
		this.dst = dst;
		this.length = length;
		this.stride = stride;
		this.next = next;
		if ((pad.length != this.pad.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.pad = pad;
	}
	public rawCbs_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends rawCbs_t implements Structure.ByReference {
		
	};
	public static class ByValue extends rawCbs_t implements Structure.ByValue {
		
	};
}
