package rxgpio.pigpio;

import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class rawSPI_t extends Structure {
	/** gpio for clock */
	public int clk;
	/** gpio for MOSI */
	public int mosi;
	/** gpio for MISO */
	public int miso;
	/** slave select off state */
	public int ss_pol;
	/** delay after slave select */
	public int ss_us;
	/** clock off state */
	public int clk_pol;
	/** clock phase */
	public int clk_pha;
	/** clock micros */
	public int clk_us;
	public rawSPI_t() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("clk", "mosi", "miso", "ss_pol", "ss_us", "clk_pol", "clk_pha", "clk_us");
	}
	public rawSPI_t(int clk, int mosi, int miso, int ss_pol, int ss_us, int clk_pol, int clk_pha, int clk_us) {
		super();
		this.clk = clk;
		this.mosi = mosi;
		this.miso = miso;
		this.ss_pol = ss_pol;
		this.ss_us = ss_us;
		this.clk_pol = clk_pol;
		this.clk_pha = clk_pha;
		this.clk_us = clk_us;
	}
	public rawSPI_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends rawSPI_t implements Structure.ByReference {
		
	};
	public static class ByValue extends rawSPI_t implements Structure.ByValue {
		
	};
}
